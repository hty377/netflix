{"ast":null,"code":"var _jsxFileName = \"/Users/atian/Desktop/assignment/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; // import App from './App';\n\nimport { createStore } from 'redux';\nimport { Provider, connect } from \"react-redux\";\nimport { getMyList, getRecom } from './http/httpInstance'; // 初始化Store\n\nconst reducer = function (state = {\n  num: 0,\n  listData: [],\n  recomData: []\n}, action) {\n  let list = state.listData;\n  let recom = state.recomData;\n\n  switch (action.type) {\n    case 'updateList':\n      state.listData = action.data;\n      break;\n\n    case 'updateRecom':\n      state.recomData = action.data;\n      break;\n\n    case 'delList':\n      let index = list.findIndex(item => {\n        return item.id === action.id;\n      });\n      let delData = list.find(item => {\n        return item.id === action.id;\n      });\n      recom.push(delData);\n      list.splice(index, 1);\n      return Object.assign({}, state, {\n        listData: [...list],\n        recomData: [...recom]\n      });\n\n    case 'delRecom':\n      let i = recom.findIndex(item => {\n        return item.id === action.id;\n      });\n      let delrecData = recom.find(item => {\n        return item.id === action.id;\n      });\n      list.push(delrecData);\n      recom.splice(i, 1);\n      return Object.assign({}, state, {\n        listData: [...list],\n        recomData: [...recom]\n      });\n\n    default:\n      break;\n  }\n\n  return Object.assign({}, state);\n};\n\nconst store = createStore(reducer); // 数据的获取以及数据的修改\n// 将state数据映射到组件prop中，将修改数据的方法映射到组件的props中\n// state映射到props\n// 修改数据的方法映射到props\n\nfunction mapStateToProps(state) {\n  return {\n    listData: state.listData,\n    recomData: state.recomData\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    updateListEvent: data => {\n      dispatch({\n        type: 'updateList',\n        data: data\n      });\n    },\n    updateRecomEvent: data => {\n      dispatch({\n        type: 'updateRecom',\n        data: data\n      });\n    },\n    delListEvent: id => {\n      dispatch({\n        type: 'delList',\n        id: id\n      });\n    },\n    delRecomEvent: id => {\n      dispatch({\n        type: 'delRecom',\n        id: id\n      });\n    }\n  };\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    let listData = this.props.listData;\n    let recomData = this.props.recomData;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mod\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"My List\"), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, listData.map(item => {\n      return React.createElement(\"div\", {\n        key: item.id,\n        className: \"item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: item.img,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"btn\",\n        onClick: () => {\n          this.props.delListEvent(item.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"\\u5220\\u9664\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, item.title));\n    }))), React.createElement(\"div\", {\n      className: \"mod\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Recommendations List\"), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, recomData.map(item => {\n      return React.createElement(\"div\", {\n        key: item.id,\n        className: \"item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: item.img,\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"btn\",\n        onClick: () => {\n          this.props.delRecomEvent(item.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"\\u6DFB\\u52A0\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, item.title));\n    }))));\n  } // 生命周期，组件渲染完毕，加载数据\n\n\n  async componentDidMount() {\n    let list = await getMyList();\n    let recom = await getRecom();\n    this.props.updateListEvent(list);\n    this.props.updateRecomEvent(recom);\n  }\n\n} // 将这两个方法关联到组件\n\n\nconst NewApp = connect(mapStateToProps, mapDispatchToProps)(App);\nReactDOM.render(React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 142\n  },\n  __self: this\n}, React.createElement(NewApp, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 143\n  },\n  __self: this\n})), document.getElementById('root'));","map":{"version":3,"sources":["/Users/atian/Desktop/assignment/src/index.js"],"names":["React","ReactDOM","createStore","Provider","connect","getMyList","getRecom","reducer","state","num","listData","recomData","action","list","recom","type","data","index","findIndex","item","id","delData","find","push","splice","Object","assign","i","delrecData","store","mapStateToProps","mapDispatchToProps","dispatch","updateListEvent","updateRecomEvent","delListEvent","delRecomEvent","App","Component","constructor","props","render","map","img","title","componentDidMount","NewApp","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport { createStore} from 'redux'\nimport { Provider,connect } from \"react-redux\";\nimport {getMyList, getRecom} from './http/httpInstance'\n\n\n// 初始化Store\nconst reducer = function ( state = {num: 0, listData:[], recomData:[] },action) {\n    let list = state.listData\n    let recom = state.recomData\n    switch(action.type) {\n        case 'updateList': state.listData = action.data;break;\n        case 'updateRecom': state.recomData = action.data;break;\n        case 'delList': \n            let index = list.findIndex(item => { return item.id === action.id })\n            let delData = list.find(item => { return item.id === action.id })\n            recom.push(delData)\n            list.splice(index,1);\n            return Object.assign({},state,{listData:[...list], recomData:[...recom]})\n         case 'delRecom': \n            let i = recom.findIndex(item => { return item.id === action.id })\n            let delrecData = recom.find(item => { return item.id === action.id })\n            list.push(delrecData)\n            recom.splice(i,1);\n            return Object.assign({},state,{listData:[...list], recomData:[...recom]})\n        \n        default: break\n    }\n\n    return Object.assign({}, state);\n}\nconst store = createStore(reducer)\n\n\n// 数据的获取以及数据的修改\n// 将state数据映射到组件prop中，将修改数据的方法映射到组件的props中\n  // state映射到props\n  // 修改数据的方法映射到props\n\n  function mapStateToProps (state) {\n    return {\n      listData: state.listData,\n      recomData: state.recomData\n    }\n  }\n  function mapDispatchToProps (dispatch) {\n    return {\n      updateListEvent: (data) => {\n        dispatch({\n          type:'updateList',\n          data:data\n        })\n      },\n      updateRecomEvent:(data) => {\n        dispatch({\n          type:'updateRecom',\n          data:data\n        })\n      },\n      delListEvent: (id) => {\n        dispatch({\n          type: 'delList',\n          id:id\n        })\n      },\n      delRecomEvent:(id) => {\n        dispatch({\n          type: 'delRecom',\n          id:id\n        })\n      }\n    }\n  }\n\n \nclass App extends React.Component {\n    constructor (props) {\n      super(props)\n      this.state = {\n      }\n    }\n    render () {\n      let listData = this.props.listData\n      let recomData = this.props.recomData\n        return (\n          <div>\n              <div className='mod'>\n                  <div className=\"title\">My List</div>\n                  <div className=\"content\">\n                    {\n                      listData.map(item => {\n                          return (\n                            <div key={item.id} className=\"item\">\n                              <img src={item.img} alt=\"\"></img> \n                              <div className=\"btn\" onClick={()=> {this.props.delListEvent(item.id)}}>删除</div>\n                              <div>{item.title}</div>\n                            </div>\n                          )\n                      })\n                    }\n                  </div>\n              </div>\n\n              <div className='mod'>\n                  <div className=\"title\">Recommendations List</div>\n                  <div className=\"content\">\n                  {\n                      recomData.map(item => {\n                          return (\n                            <div key={item.id} className=\"item\">\n                              <img src={item.img} alt=\"\"></img> \n                              <div className=\"btn\" onClick={() =>{this.props.delRecomEvent(item.id)}}>添加</div>\n                              <div>{item.title}</div>\n                            </div>\n                          )\n                      })\n                    }\n                  </div>\n              </div>\n          </div>\n        )\n    }\n    // 生命周期，组件渲染完毕，加载数据\n    async componentDidMount () {\n      let list = await getMyList()\n      let recom = await getRecom()\n      this.props.updateListEvent(list)\n      this.props.updateRecomEvent(recom)\n   }\n}\n  // 将这两个方法关联到组件\n  const NewApp = connect (\n    mapStateToProps,\n    mapDispatchToProps\n)(App)\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <NewApp />\n    </Provider>,\n    document.getElementById('root'));\n\n\n"]},"metadata":{},"sourceType":"module"}